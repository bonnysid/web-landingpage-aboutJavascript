{"version":3,"sources":["webpack://web-landingpage-aboutjavascript/./src/components/burger.js","webpack://web-landingpage-aboutjavascript/./src/components/formFunctions.js","webpack://web-landingpage-aboutjavascript/./src/components/index.js","webpack://web-landingpage-aboutjavascript/./src/components/inputError.js","webpack://web-landingpage-aboutjavascript/./src/components/minMaxBlock.js","webpack://web-landingpage-aboutjavascript/./src/components/nameBlock.js","webpack://web-landingpage-aboutjavascript/./src/components/navbar.js","webpack://web-landingpage-aboutjavascript/./src/components/testBlock.js","webpack://web-landingpage-aboutjavascript/./src/components/timer.js","webpack://web-landingpage-aboutjavascript/./src/components/triangleBlock.js","webpack://web-landingpage-aboutjavascript/./src/components/wordsBlock.js","webpack://web-landingpage-aboutjavascript/webpack/bootstrap","webpack://web-landingpage-aboutjavascript/webpack/runtime/define property getters","webpack://web-landingpage-aboutjavascript/webpack/runtime/hasOwnProperty shorthand","webpack://web-landingpage-aboutjavascript/webpack/runtime/make namespace object","webpack://web-landingpage-aboutjavascript/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA,iEAAe,cAAc,E;;;;;;;;;;;;;;;;;;ACjBtB;AACP,yCAAyC,0BAA0B;AACnE;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEA,4BAA4B,iBAAiB;AAC7C;;AAEO,4BAA4B,0BAA0B;AAC7D;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEO;;;;;;;;;;;;;;;;;;;;AC1B6C;AACR;AACE;AACE;AACZ;AACG;AACD;AACA;;AAEtC;AACA,IAAI,mDAAiB;AACrB,IAAI,uDAAqB;AACzB,IAAI,oDAAkB;AACtB,IAAI,qDAAmB;AACvB,IAAI,+CAAa;AACjB,IAAI,mDAAY;AAChB,IAAI,gDAAc;AAClB,IAAI,gDAAc;AAClB,CAAC,C;;;;;;;;;;;;;;AClBD;AACA;AACA;;AAEA,kCAAkC,yBAAyB;AAC3D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;ACjCiB;AACL;AACnD;;AAEA;AACA;AACA,mBAAmB,yDAAS;;AAE5B;AACA;AACA;;AAEA,eAAe,KAAK;AACpB;AACA;;AAEA,oEAAoE,uBAAuB;AAC3F,oEAAoE,uBAAuB;AAC3F;;AAEA,mDAAmD,4DAAY;AAC/D;AACA;AACA;AACA,KAAK;AACL;;AAEA,iEAAe,mBAAmB,E;;;;;;;;;;;;;;;;AC3BW;AACU;AACJ;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qCAAqC,UAAU;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC,oDAAuB;AAC3D;AACA;AACA;AACA,KAAK;AACL,wCAAwC,oDAAuB;AAC/D;AACA;AACA;AACA,KAAK;;AAEL;AACA,eAAe,KAAK;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC,UAAU;AACnD;;AAEA;;AAEA,iDAAiD,4DAAY;AAC7D;AACA;AACA;AACA,KAAK;AACL;;AAEA,iEAAe,iBAAiB,E;;;;;;;;;;;;;;ACjGhC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,iEAAe,cAAc,E;;;;;;;;;;;;;;;AClBgB;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,kCAAkC,aAAa,SAAS,eAAe;AACvE;AACA,oCAAoC,MAAM;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;;;AAIA;;AAEA,iDAAiD,4DAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,iEAAe,YAAY,E;;;;;;;;;;;;;;ACzE3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;;AAEA,wDAAwD,IAAI;;AAE5D;AACA;AACA;AACA;;AAEA,iEAAe,aAAa,E;;;;;;;;;;;;;;;;AC9E0D;AACnC;;AAEnD;AACA;AACA;AACA;;AAEA,mBAAmB,yDAAS;AAC5B;AACA;AACA;;AAEA;AACA,qBAAqB,oDAAuB;AAC5C;AACA;AACA,+BAA+B,yDAAS;AACxC,SAAS;AACT,qBAAqB,oDAAuB;AAC5C;AACA;AACA,+BAA+B,yDAAS;AACxC,SAAS;AACT,KAAK;AACL,IAAI,kEAAiB;AACrB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,2EAA2E;;AAE1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mDAAmD,4DAAY;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,iEAAe,qBAAqB,E;;;;;;;;;;;;;;;AChFS;;AAE7C;AACA;;AAEA;AACA;AACA;;AAEA,yDAAyD,qEAAqE,IAAI,6CAA6C;AAC/K;;AAEA,oDAAoD,4DAAY;AAChE;AACA;AACA;AACA,KAAK;AACL;;AAEA,iEAAe,kBAAkB,E;;;;;;UCnBjC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"bundle.js","sourcesContent":["const activateBurger = () => {\r\n    const burger = document.querySelector('.burger');\r\n    const menu = document.querySelector('.navbar');\r\n    const aside = document.querySelector('.aside');\r\n\r\n    const toggleMenu = () => {\r\n        document.body.classList.toggle('closed');\r\n        menu.classList.toggle('active');\r\n        burger.classList.toggle('active');\r\n        aside.classList.toggle('active');\r\n    }\r\n\r\n    burger.addEventListener('click', evt => {\r\n        toggleMenu();\r\n    })\r\n}\r\n\r\nexport default activateBurger;","export const getInputs = (form, checked) => {\r\n    return form.querySelectorAll(`input${checked ? ':checked' : ''}`);\r\n}\r\n\r\nexport const getValues = (...inputs) => {\r\n    return inputs.map(input => input.value);\r\n}\r\n\r\nexport const handleSubmit = (props) => {\r\n    props.event.preventDefault();\r\n    const inputs = getInputs(props.form, props.checked);\r\n    const values = getValues(...inputs);\r\n\r\n    props.callback(values, {inputs, ...props});\r\n}\r\n\r\nexport const addEventListeners = ({elements, events, actions}) => {\r\n    elements.forEach(element => {\r\n        events.forEach(event => {\r\n            actions.forEach(action => {\r\n                element.addEventListener(event, action);\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nexport const isNumeric = (num) =>!isNaN(num);\r\n","import activateTriangleBlock from \"./triangleBlock\";\r\nimport activateNameBlock from \"./nameBlock\";\r\nimport activateWordsBlock from \"./wordsBlock\";\r\nimport activateMinMaxBlock from \"./minMaxBlock\";\r\nimport activateTimer from \"./timer\";\r\nimport activateTest from \"./testBlock\";\r\nimport activateBurger from \"./burger\";\r\nimport activateNavbar from \"./navbar\";\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    activateNameBlock();\r\n    activateTriangleBlock();\r\n    activateWordsBlock();\r\n    activateMinMaxBlock();\r\n    activateTimer();\r\n    activateTest();\r\n    activateBurger();\r\n    activateNavbar();\r\n})","const checkForTextError = (input) => {\r\n    return input.previousElementSibling && input.previousElementSibling.classList.contains('error-text') ? input.previousElementSibling : null;\r\n}\r\n\r\nconst addInputErrorValidation = ({input, error, errorCheck}) => {\r\n    const textError = checkForTextError(input) || addTextError(input, error);\r\n\r\n    return (e) => {\r\n        if (errorCheck()) activateError(input, textError)\r\n        else deactivateError(input, textError);\r\n    }\r\n}\r\n\r\nconst addTextError = (input, error) => {\r\n    const textError = document.createElement('span');\r\n    textError.classList.add('error-text');\r\n    textError.innerHTML = error;\r\n    textError.style.display = 'none';\r\n    input.before(textError);\r\n    return textError;\r\n}\r\n\r\nconst activateError = (input, textError) => {\r\n    input.classList.add('error-input');\r\n    textError.style.display = 'inline-block'\r\n}\r\n\r\nconst deactivateError = (input, textError) => {\r\n    input.classList.remove('error-input');\r\n    textError.style.display = 'none'\r\n}\r\n\r\n\r\nexport default addInputErrorValidation;\r\n","import {getInputs, handleSubmit} from \"./formFunctions\";\r\nimport addInputErrorValidation from \"./inputError\";\r\nconst error = 'Введите число!';\r\n\r\nconst activateMinMaxBlock = () => {\r\n    const minMaxForm = document.querySelector('.minmax-form');\r\n    const inputs = getInputs(minMaxForm);\r\n\r\n    const findMinMax = (values, props) => {\r\n        let [numValues] = values;\r\n        numValues = numValues.trim().split(',').map(num => +num);\r\n\r\n        const {form} = props;\r\n        const min = form.querySelector('.min');\r\n        const max = form.querySelector('.max');\r\n\r\n        min.innerHTML = `<span style=\"color: #bf5050\">Min</span>: ${Math.min(...numValues)}`;\r\n        max.innerHTML = `<span style=\"color: #70b35f\">Max</span>: ${Math.max(...numValues)}`;\r\n    }\r\n\r\n    minMaxForm.addEventListener('submit', event => handleSubmit({\r\n        event,\r\n        form: minMaxForm,\r\n        callback: findMinMax\r\n    }))\r\n}\r\n\r\nexport default activateMinMaxBlock;","import {handleSubmit} from \"./formFunctions\";\r\nimport addInputError, {checkInput} from \"./inputError\";\r\nimport addInputErrorValidation from \"./inputError\";\r\n\r\nconst setName = (name) => localStorage.setItem('name', name);\r\nconst getName = () => localStorage.getItem('name');\r\nconst deleteName = () => localStorage.removeItem('name');\r\nconst logoutFunc = (e, form, label, title) => {\r\n    const loginContainer = document.querySelector('.login-container');\r\n    e.preventDefault();\r\n    deleteName();\r\n    loginContainer.remove();\r\n    form.style.display = 'grid';\r\n    label.style.display = 'inline-block';\r\n    title.innerHTML = `Привет, дорогой друг!`;\r\n}\r\nconst activateLogin = (form, label, title) => {\r\n    const logoContainer = document.querySelector('.logo-container');\r\n    const login = document.createElement('div');\r\n\r\n    login.classList.add('login-container')\r\n    login.innerHTML = `\r\n        <h2 class=\"login\">${getName()}</h2>\r\n        <svg class=\"logout\">\r\n            <use xlink:href=\"./src/assets/img/icons.svg#logout\"></use>\r\n        </svg>\r\n        `;\r\n    logoContainer.append(login);\r\n\r\n    const logout = login.querySelector('.logout');\r\n    logout.addEventListener('click', e => logoutFunc(e, form, label, title))\r\n}\r\nconst startCheck = (form) => {\r\n    if (getName()) {\r\n        const formParent = form.parentElement;\r\n        const title = formParent.querySelector('.title');\r\n        const label = formParent.querySelector('label');\r\n\r\n        activateLogin(form, label, title);\r\n\r\n        form.style.display = 'none';\r\n        label.style.display = 'none';\r\n        title.innerHTML = `Привет, ${getName()}`;\r\n\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nconst error = 'Имя не может быть пустым';\r\n\r\nconst activateNameBlock = () => {\r\n    const nameForm = document.querySelector('.name-form');\r\n    const input = nameForm.querySelector('input');\r\n\r\n    startCheck(nameForm);\r\n    input.addEventListener('input', addInputErrorValidation({\r\n        input,\r\n        error,\r\n        errorCheck: () => input.value.trim().length === 0\r\n    }));\r\n    nameForm.addEventListener('submit', addInputErrorValidation({\r\n        input,\r\n        error,\r\n        errorCheck: () => input.value.trim().length === 0\r\n    }));\r\n\r\n    const getNameInput = (values, props) => {\r\n        const {form} = props;\r\n        const [input] = props.inputs;\r\n        if (input.value.trim().length === 0) return;\r\n\r\n        if (!startCheck(form)) {\r\n            const [name] = values;\r\n            setName(name);\r\n\r\n            const formParent = form.parentElement;\r\n            const title = formParent.querySelector('.title');\r\n            const label = formParent.querySelector('label');\r\n            const input = form.querySelector('input');\r\n            input.value = '';\r\n\r\n            form.style.display = 'none';\r\n            label.style.display = 'none';\r\n            activateLogin(form, label, title);\r\n\r\n            title.innerHTML = `Привет, ${getName()}`;\r\n        }\r\n\r\n    }\r\n\r\n    nameForm.addEventListener('submit', event => handleSubmit({\r\n        event,\r\n        form: nameForm,\r\n        callback: getNameInput\r\n    }))\r\n}\r\n\r\nexport default activateNameBlock;","const activateNavbar = () => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const links = navbar.querySelectorAll('.navbar-link');\r\n\r\n    const selectButton = (link) => {\r\n        disableActive();\r\n        addActive(link);\r\n    }\r\n\r\n    const disableActive = () => {\r\n        links.forEach(link => link.classList.remove('active'));\r\n    }\r\n\r\n    const addActive = (link) => link.classList.add('active');\r\n\r\n    links.forEach(link => link.addEventListener('click', () => selectButton(link)));\r\n}\r\n\r\nexport default activateNavbar;","import {handleSubmit} from \"./formFunctions\";\r\n\r\nconst activateTest = () => {\r\n    const testForm = document.querySelector('.test-form');\r\n    const testTitle = document.querySelector('.test-title');\r\n\r\n    const submitForm = (values, props) => {\r\n        const rightAnswers = values.reduce((total, answer, i) => total + (answer.toLowerCase().trim() === props.rightAnswers[i] ? 1 : 0), 0);\r\n        const againBtn = document.createElement('button');\r\n        againBtn.classList.add('btn');\r\n        againBtn.innerHTML = 'Пройти заново';\r\n        againBtn.style.margin = '1em auto';\r\n\r\n        let color;\r\n        let additionalText;\r\n\r\n        if (rightAnswers <= 3) {\r\n            color = '#bf5050';\r\n            additionalText = 'вам нужно подтянуть свои знания!'\r\n        }\r\n        else if (rightAnswers <= 7 ) {\r\n            color = '#edd640';\r\n            additionalText = 'не плохой результат!'\r\n        }\r\n        else {\r\n            color = '#70b35f';\r\n            additionalText = 'отличный результат!'\r\n        }\r\n\r\n\r\n\r\n        const resultTest = document.createElement('p');\r\n        resultTest.innerHTML = `${rightAnswers} / 10, ${additionalText}`;\r\n        resultTest.style.textAlign = 'center';\r\n        resultTest.style.color = `${color}`;\r\n        props.form.style.display = 'none';\r\n\r\n        againBtn.addEventListener('click', ev => {\r\n            props.form.style.display = 'block';\r\n            resultTest.remove();\r\n            againBtn.remove();\r\n            props.inputs.forEach(input => input.checked = false);\r\n        })\r\n\r\n        props.title.innerHTML = 'Результат';\r\n        props.title.insertAdjacentElement('afterend', resultTest);\r\n        resultTest.insertAdjacentElement('afterend', againBtn);\r\n\r\n\r\n\r\n    }\r\n\r\n    testForm.addEventListener('submit', event => handleSubmit({\r\n        event,\r\n        form: testForm,\r\n        checked: true,\r\n        callback:submitForm,\r\n        title: testTitle,\r\n        rightAnswers: [\r\n            'max',\r\n            'min',\r\n            'date',\r\n            'forinterval',\r\n            'tripleeq',\r\n            'ceil',\r\n            'floor',\r\n            'same',\r\n            'no',\r\n            'node'\r\n        ]\r\n    }))\r\n}\r\n\r\nexport default activateTest;","const activateTimer = () => {\r\n    const timer = document.querySelector('.timer');\r\n    const hrs = timer.querySelector('.hours');\r\n    const min = timer.querySelector('.minutes');\r\n    const sec = timer.querySelector('.seconds');\r\n\r\n    const startBtn = document.querySelector('.start-btn');\r\n    const stopBtn = document.querySelector('.stop-btn');\r\n    const resetBtn = document.querySelector('.reset-btn');\r\n\r\n    let isStopped = false;\r\n    let oldTimeStart;\r\n    let firstTime = true;\r\n\r\n    const start = () => {\r\n        let time;\r\n        if (firstTime) {\r\n            time = Date.parse(new Date());\r\n            oldTimeStart = time;\r\n            firstTime = false;\r\n        }\r\n        else {\r\n            time = Date.parse(new Date()) - oldTimeStart;\r\n        }\r\n        startBtn.style.display = 'none';\r\n        stopBtn.style.display = 'flex';\r\n        resetBtn.disabled = false;\r\n        isStopped = false;\r\n        const timeInterval = setInterval(() => updateTime(time, timeInterval), 1000);\r\n    }\r\n\r\n    const stop = () => {\r\n        const h = +hrs.innerHTML,\r\n            m = +min.innerHTML,\r\n            s = +sec.innerHTML;\r\n        isStopped = true;\r\n        startBtn.style.display = 'flex';\r\n        stopBtn.style.display = 'none';\r\n        oldTimeStart = h * 1000 * 60 * 60 + m * 60 * 1000 + s * 1000\r\n    }\r\n\r\n    const reset = () => {\r\n        isStopped = true;\r\n        startBtn.style.display = 'flex';\r\n        stopBtn.style.display = 'none';\r\n        resetBtn.disabled = true;\r\n        firstTime = true;\r\n        hrs.innerHTML = `00`;\r\n        min.innerHTML = `00`;\r\n        sec.innerHTML = `00`;\r\n    }\r\n\r\n    const updateTime = (startTime, interval) => {\r\n        if(isStopped) {\r\n            clearInterval(interval);\r\n            return;\r\n        }\r\n\r\n        const nowTime = Date.parse(new Date());\r\n\r\n        const diff = nowTime - startTime;\r\n\r\n        const s = getZero(Math.floor(diff / 1000 % 60));\r\n        const m = getZero(Math.floor((diff / 1000  / 60) % 60));\r\n        const h = getZero(Math.floor((diff / 1000 / 60 / 24) % 24));\r\n\r\n        hrs.innerHTML = `${h}`;\r\n        min.innerHTML = `${m}`;\r\n        sec.innerHTML = `${s}`;\r\n    }\r\n\r\n    const getZero = (num) => num >= 0 && num < 10 ? `0${num}` : num;\r\n\r\n    startBtn.addEventListener('click', start);\r\n    stopBtn.addEventListener('click', stop);\r\n    resetBtn.addEventListener('click', reset);\r\n}\r\n\r\nexport default activateTimer;","import {addEventListeners, getInputs, handleSubmit, isNumeric} from \"./formFunctions\";\r\nimport addInputErrorValidation from \"./inputError\";\r\n\r\nconst activateTriangleBlock = () => {\r\n    const triangleForm = document.querySelector('.triangle-form');\r\n    const triangleCanvas = document.querySelector('#triangle-canvas');\r\n    const triangleCanvasContext = triangleCanvas.getContext('2d');\r\n\r\n    const inputs = getInputs(triangleForm);\r\n    const ERROR_NUM = 'Введи число';\r\n    const ERROR_ZERO = 'Число не может быть меньше 1!';\r\n    const actions = [];\r\n\r\n    inputs.forEach(input => {\r\n        actions.push(addInputErrorValidation({\r\n            input,\r\n            error: ERROR_ZERO,\r\n            errorCheck: () => !isNumeric(input.value) && +input.value <= 0\r\n        }))\r\n        actions.push(addInputErrorValidation({\r\n            input,\r\n            error: ERROR_NUM,\r\n            errorCheck: () => !isNumeric(input.value)\r\n        }))\r\n    })\r\n    addEventListeners({\r\n        elements: inputs,\r\n        events: ['input'],\r\n        actions: actions\r\n    })\r\n\r\n    const calculateTriangleArea = (values, props) => {\r\n        let [height, length] = values.map(value => +value);\r\n        const area = height * length / 2;\r\n        const {ctx, width = 2, fill = '#333', canvasWidth = 100, canvasHeight = 100, form} = props;\r\n\r\n        while (height < canvasHeight / 1.2 || length < canvasWidth / 1.2) {\r\n            height *= 1.2;\r\n            length *= 1.2;\r\n        }\r\n        while (height > canvasHeight / 1.2 || length > canvasWidth / 1.2) {\r\n            height /= 1.2;\r\n            length /= 1.2;\r\n        }\r\n\r\n        const dx = canvasWidth / 2 - length >= canvasWidth ? canvasWidth : canvasWidth / 2 - length;\r\n        const dy = canvasHeight / 2 + height >= canvasHeight ? canvasHeight : canvasHeight / 2 + height;\r\n\r\n        const answer = form.querySelector('.triangle-answer') ? form.querySelector('.triangle-answer') : document.createElement('span');\r\n        answer.classList.add('text');\r\n        answer.classList.add('triangle-answer');\r\n        answer.innerHTML = `Ответ: ${area}`;\r\n        form.append(answer);\r\n\r\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n        ctx.lineWidth = width;\r\n        ctx.fillStyle = fill;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(dx, dy);\r\n        ctx.lineTo(dx, dy - height);\r\n        ctx.lineTo(dx + length, dy);\r\n\r\n        ctx.fill();\r\n    }\r\n\r\n    triangleForm.addEventListener('submit', evt => handleSubmit({\r\n        form: triangleForm,\r\n        event: evt,\r\n        callback: calculateTriangleArea,\r\n        ctx: triangleCanvasContext,\r\n        width: 3,\r\n        fill: '#546dd8',\r\n        canvasWidth: triangleCanvas.clientWidth,\r\n        canvasHeight: triangleCanvas.clientHeight,\r\n        scale: 10\r\n    }))\r\n}\r\n\r\nexport default activateTriangleBlock;","import {handleSubmit} from \"./formFunctions\";\r\n\r\nconst activateWordsBlock = () => {\r\n    const wordsForm = document.querySelector('.words-form');\r\n\r\n    const checkForEquals = (values, props) => {\r\n        const [first, second] = values;\r\n        const answer = props.form.querySelector('p');\r\n\r\n        answer.innerHTML = `Равны: <span style=\"color: ${first.trim().length === second.trim().length ? '#70b35f' : '#bf5050'}\">${first.trim().length === second.trim().length}</span>`\r\n    }\r\n\r\n    wordsForm.addEventListener('submit', (event) => handleSubmit({\r\n        event,\r\n        form: wordsForm,\r\n        callback: checkForEquals\r\n    }))\r\n}\r\n\r\nexport default activateWordsBlock;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/components/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}